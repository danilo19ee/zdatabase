+++++++++++++++++++++++++++++++++++
+       KUBERNETES OL7            +
+++++++++++++++++++++++++++++++++++

#KUBERNETES IS AN OPEN SOURCE PRODUCT USED TO AUTOMATE THE IMPLEMENTATION, DIMENSIONING AND MANAGEMENT OF CONTAINER APPLICATIONS

CHECK KERNEL VERSION (THE ORACLE LINUX 7 RUN WITH KERNEL VERSION 4.*)
uname -a
Linux localhost.localdomain 4.14.35-1902.9.2.el7uek.x86_64 #2 SMP Mon Dec 23 13:39:16 PST 2019 x86_64 x86_64 x86_64 GNU/Linux

#DISABLE SELINUX AND STOP FIREWALL IN ALL NODES 
sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux && setenforce 0
systemctl stop firewalld && systemctl disable firewalld

#ADD REPOSITORY ol7_addons
vi /etc/yum.repos.d/oracle-linux-ol7.repo
[ol7_addons]
name=Oracle Linux $releasever Add ons ($basearch)
baseurl=https://yum$ociregion.oracle.com/repo/OracleLinux/OL7/addons/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

#LIST REPOSITORIES
Loaded plugins: langpacks, ulninfo
ol7_UEKR5                                                                                                                                                                                                                                                | 2.5 kB  00:00:00     
ol7_addons                                                                                                                                                                                                                                               | 2.5 kB  00:00:00     
ol7_latest                                                                                                                                                                                                                                               | 2.7 kB  00:00:00     
(1/6): ol7_UEKR5/x86_64/updateinfo                                                                                                                                                                                                                       |  28 kB  00:00:00     
(2/6): ol7_addons/x86_64/updateinfo                                                                                                                                                                                                                      |  76 kB  00:00:00     
(3/6): ol7_addons/x86_64/primary_db                                                                                                                                                                                                                      | 147 kB  00:00:00     
(4/6): ol7_UEKR5/x86_64/primary_db                                                                                                                                                                                                                       |  10 MB  00:00:00     
(5/6): ol7_latest/x86_64/updateinfo                                                                                                                                                                                                                      | 2.6 MB  00:00:00     
(6/6): ol7_latest/x86_64/primary_db                                                                                                                                                                                                                      |  26 MB  00:00:01     
repo id                                              repo name                                                                                                                                                            status
ol7_UEKR5/x86_64                                     Latest Unbreakable Enterprise Kernel Release 5 for Oracle Linux 7Server (x86_64)                                                                                        221
ol7_addons/x86_64                                    Oracle Linux 7Server Add ons (x86_64)                                                                                                                                   395
ol7_latest/x86_64                                    Oracle Linux 7Server Latest (x86_64)                                                                                                                                 16,108
repolist: 16,724

#CHANGE HOSTNAME
#FOR SLAVE MACHINES, SET THE HOSTNAME
hostnamectl 
hostnamectl set-hostname KUBERMASTER
hostnamectl --static 

vi /etc/hosts
192.168.1.116  KUBERMASTER
192.168.1.117  KUBERWORKER

#ADD DISK TO CREATE STORAGE AREA FOR DOCKER ENGINE
fdisk -l
Disk /dev/sdb: 107.4 GB, 107374182400 bytes, 209715200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

#CREATE BTRFS PARTITION FOR DOCKER
mkdir -p /var/lib/docker

parted /dev/sdb -s -- mklabel gpt mkpart DOCKER 1 -1

mkfs.btrfs -L var-lib-docker /dev/sdb1
btrfs-progs v4.9.1
See http://btrfs.wiki.kernel.org for more information.

Label:              var-lib-docker
UUID:               e35d7f7e-b8f2-474d-8ba0-8a75c5c3d30b
Node size:          16384
Sector size:        4096
Filesystem size:    100.00GiB
Block group profiles:
  Data:             single            8.00MiB
  Metadata:         DUP               1.00GiB
  System:           DUP               8.00MiB
SSD detected:       no
Incompat features:  extref
Number of devices:  1
Devices:
   ID        SIZE  PATH
    1   100.00GiB  /dev/sdb1

#MOUNT PARTITION DOCKER
echo "LABEL=var-lib-docker /var/lib/docker btrfs defaults 0 0" >> /etc/fstab
mount /var/lib/docker
df -h
Used Avail Use% Mounted on
devtmpfs        2.0G     0  2.0G   0% /dev
tmpfs           2.0G     0  2.0G   0% /dev/shm
tmpfs           2.0G  9.4M  2.0G   1% /run
tmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup
/dev/sda2        31G  7.2G   22G  25% /
/dev/sda1       347M  284M   64M  82% /boot
tmpfs           394M   20K  394M   1% /run/user/0
/dev/sdb1       100G   17M   98G   1% /var/lib/docker

#INSTALL AND CONFIGURE NTP
yum -y install ntp

systemctl enable ntpd

ntpdate a.ntp.br
 3 Feb 11:42:15 ntpdate[3249]: step time server 200.160.0.8 offset 74.420798 sec

vi /etc/ntp.conf 
server a.ntp.br
server b.ntp.br
server c.ntp.br

systemctl start ntpd

systemctl status ntpd
‚óè ntpd.service - Network Time Service
   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Mon 2020-02-03 11:47:35 -03; 4s ago

#INSTALL DOCKER ENGINE
yum -y install docker-engine
systemctl enable docker
systemctl start docker

## KUBERNETES MASTER ##
#ON KUBERNETES MASTER SERVER
yum -y install kubeadm kubelet kubectl

#LOG IN ORACLE CONTAINER REGISTRY
#IT IS NECESSARY TO HAVE AN ORACLE LOGIN
FIRST OPEN ORACLE CONTAINER REGISTRY ADDRESS IN A BROWSER, LOGIN, GO TO THE "CONTAINER SERVICES" OPTION AND SING IN TO ACCEPT THE TERMS OF USE
https://container-registry.oracle.com/

docker login container-registry.oracle.com/kubernetes
Username: <email> 
Password: <password>
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

### CONFIGURE MASTER SERVER ####
kubeadm-setup.sh up --pod-network-cidr 10.0.0.0/16
Checking kubelet and kubectl RPM ...
Starting to initialize master node ...
Checking if env is ready ...
Checking whether docker can pull busybox image ...
Checking access to container-registry.oracle.com/kubernetes ...
Trying to pull repository container-registry.oracle.com/kubernetes/kube-proxy ...
v1.12.10: Pulling from container-registry.oracle.com/kubernetes/kube-proxy
Digest: sha256:2340f6d185aaec709f46a878b2b0003615de95c87809fb224eb53818ad5ddda6
Status: Image is up to date for container-registry.oracle.com/kubernetes/kube-proxy:v1.12.10
container-registry.oracle.com/kubernetes/kube-proxy:v1.12.10
Checking whether docker can run container ...
Checking iptables default rule ...
Checking br_netfilter module ...
Checking sysctl variables ...
Enabling kubelet ...
Created symlink from /etc/systemd/system/multi-user.target.wants/kubelet.service to /etc/systemd/system/                                                                                                                                     kubelet.service.
Check successful, ready to run 'up' command ...
Waiting for kubeadm to setup master cluster...
Please wait ...
| - 80% completed
Waiting for the control plane to become ready ...
..............
100% completed
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.extensions/kube-flannel-ds created
Patching CVE ...

Installing kubernetes-dashboard ...

Enabling kubectl-proxy.service ...
Starting kubectl-proxy.service ...
deployment.extensions/coredns patched

[===> PLEASE DO THE FOLLOWING STEPS BELOW: <===]

Your Kubernetes master has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config


You can now join any number of machines by running the following on each node
as root:

  kubeadm-setup.sh join 192.168.1.116:6443 --token 06ewe6.5b8l9qorhwzwbmhn --discovery-token-ca-cert-hash sha256:3f786c0d6c581232c65d6c4d7834ce3f123a2493c2cce1ef3d07f82e6e446637                                                                                                                                     h sha256:3f786c0d6c581232c65d6c4d7834ce3f123a2493c2cce1ef3d07f82e6e446637

#CREATE A USER ORACLE GROUP DOCKER
adduser -g docker oracle
passwd oracle

#COPY USER ENVORIMENTS ROOT FILES TO EXECUTE COMMANDS ON KUBERNETES
su - oracle
mkdir -p $HOME/.kube
logout
cp -i /etc/kubernetes/admin.conf /home/oracle/.kube/config
chown oracle:docker /home/oracle/.kube/config
su - oracle
export KUBECONFIG=$HOME/.kube/config
echo 'export KUBECONFIG=$HOME/.kube/config' >> $HOME/.bashrc

### CONFIGURE WORKER SERVER ###

#DISABLE SELINUX AND STOP FIREWALL IN ALL NODES 
sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux && setenforce 0
systemctl stop firewalld && systemctl disable firewalld

#ADD REPOSITORY ol7_addons
vi /etc/yum.repos.d/oracle-linux-ol7.repo
[ol7_addons]
name=Oracle Linux $releasever Add ons ($basearch)
baseurl=https://yum$ociregion.oracle.com/repo/OracleLinux/OL7/addons/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

#CHANGE HOSTNAME
#FOR SLAVE MACHINES, SET THE HOSTNAME
hostnamectl 
hostnamectl set-hostname KUBERWORKER
hostnamectl --static 

vi /etc/hosts
192.168.1.116  KUBERMASTER
192.168.1.117  KUBERWORKER

#INSTALL AND CONFIGURE NTP
yum -y install ntp

systemctl enable ntpd

ntpdate a.ntp.br
 3 Feb 11:42:15 ntpdate[3249]: step time server 200.160.0.8 offset 74.420798 sec

vi /etc/ntp.conf 
server a.ntp.br
server b.ntp.br
server c.ntp.br

systemctl start ntpd

systemctl status ntpd
‚óè ntpd.service - Network Time Service
   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Mon 2020-02-03 11:47:35 -03; 4s ago

#INSTALL KUBERNETS PACKAGES ON WORKER
yum -y install kubeadm kubelet kubectl

#INSTALL DOCKER ENGINE
yum -y install docker-engine
systemctl enable docker
systemctl start docker

#LOG IN ORACLE CONTAINER REGISTRY
docker login container-registry.oracle.com/kubernetes
Username: <email>
Password: <password>
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

#JOIN TO CLUSTER KUBERNETES
#USE TOKEN HASH TO SUBSCRIBE IN CLUSTER MASTER
 kubeadm-setup.sh join 192.168.1.116:6443 --token 06ewe6.5b8l9qorhwzwbmhn --discovery-token-ca-cert-hash sha256:3f786c0d6c581232c65d6c4d7834ce3f123a2493c2cce1ef3d07f82e6e446637                                                                                                                                       covery-token-ca-cert-hash sha256:3f786c0d6c581232c65d6c4d7834ce3f123a2493c2cce1ef3d07f82e6e446637
Checking kubelet and kubectl RPM ...
Starting to initialize worker node ...
Checking if env is ready ...
Checking whether docker can pull busybox image ...
Checking access to container-registry.oracle.com/kubernetes ...
Trying to pull repository container-registry.oracle.com/kubernetes/kube-proxy ...
v1.12.10: Pulling from container-registry.oracle.com/kubernetes/kube-proxy
Digest: sha256:2340f6d185aaec709f46a878b2b0003615de95c87809fb224eb53818ad5ddda6
Status: Image is up to date for container-registry.oracle.com/kubernetes/kube-proxy:v1.12.10
container-registry.oracle.com/kubernetes/kube-proxy:v1.12.10
Checking whether docker can run container ...
Checking iptables default rule ...
Checking br_netfilter module ...
Checking sysctl variables ...
Enabling kubelet ...
Created symlink from /etc/systemd/system/multi-user.target.wants/kubelet.service to /etc/systemd/sys                                                                                                                                         tem/kubelet.service.
Check successful, ready to run 'join' command ...
[validation] WARNING: kubeadm doesn't fully support multiple API Servers yet
[preflight] running pre-flight checks
        [WARNING RequiredIPVSKernelModulesAvailable]: the IPVS proxier will not be used, because the                                                                                                                                          following required kernel modules are not loaded: [ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh] or no builtin                                                                                                                                          kernel ipvs support: map[ip_vs:{} ip_vs_rr:{} ip_vs_sh:{} ip_vs_wrr:{} nf_conntrack_ipv4:{}]
you can solve this problem with following methods:
 1. Run 'modprobe -- ' to load missing kernel modules;
2. Provide the missing builtin kernel ipvs support

        [WARNING Swap]: running with swap on is not supported. Please disable swap
        [WARNING SystemVerification]: this Docker version is not on the list of validated versions:                                                                                                                                          19.03.1-ol. Latest validated version: 18.06
[discovery] Trying to connect to API Server "192.168.1.116:6443"
[discovery] Created cluster-info discovery client, requesting info from "https://192.168.1.116:6443"
[discovery] Trying to connect to API Server "192.168.1.116:6443"
[discovery] Created cluster-info discovery client, requesting info from "https://192.168.1.116:6443"
[discovery] Requesting info from "https://192.168.1.116:6443" again to validate TLS against the pinn                                                                                                                                         ed public key
[discovery] Requesting info from "https://192.168.1.116:6443" again to validate TLS against the pinn                                                                                                                                         ed public key
[discovery] Cluster info signature and contents are valid and TLS certificate validates against pinn                                                                                                                                         ed roots, will use API Server "192.168.1.116:6443"
[discovery] Successfully established connection with API Server "192.168.1.116:6443"
[discovery] Cluster info signature and contents are valid and TLS certificate validates against pinn                                                                                                                                         ed roots, will use API Server "192.168.1.116:6443"
[discovery] Successfully established connection with API Server "192.168.1.116:6443"
[kubelet] Downloading configuration for the kubelet from the "kubelet-config-1.12" ConfigMap in the                                                                                                                                          kube-system namespace
[kubelet] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[preflight] Activating the kubelet service
[tlsbootstrap] Waiting for the kubelet to perform the TLS Bootstrap...
[patchnode] Uploading the CRI Socket information "/var/run/dockershim.sock" to the Node API object "                                                                                                                                         kuberworker" as an annotation

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the master to see this node join the cluster.

## KUBERNETES MASTER ##
#VERIFY KUBERNETES NODES 
kubectl get nodes
NAME          STATUS   ROLES    AGE     VERSION
kubermaster   Ready    master   48m     v1.12.10+1.0.10.el7
kuberworker   Ready    <none>   3m57s   v1.12.10+1.0.10.el7


kubectl get pods -n kube-system
NAME                                   READY   STATUS    RESTARTS   AGE
coredns-6d5cc884f4-xbqr8               1/1     Running   0          50m
coredns-6d5cc884f4-z4kmq               1/1     Running   0          47m
etcd-kubermaster                       1/1     Running   0          50m
kube-apiserver-kubermaster             1/1     Running   1          46m
kube-controller-manager-kubermaster    1/1     Running   1          47m
kube-flannel-ds-8t6hj                  1/1     Running   2          50m
kube-flannel-ds-lsjfn                  1/1     Running   0          6m19s
kube-proxy-5djhr                       1/1     Running   0          6m19s
kube-proxy-q2vjc                       1/1     Running   0          50m
kube-scheduler-kubermaster             1/1     Running   1          47m
kubernetes-dashboard-f6b58ff9c-r7vmz   1/1     Running   0          50m

#YOUR CLUSTER IS UP AND RUNNING 
#SEE THAT SOME CLOUD NATIVE SERVICE ARE ALREADY DELIVERED BY DEFAULT BY ORACLE (CoreDNS, Flannel)













