++++++++++++++++++++++++++++++++++++
+   INSTALL PENTAHO 9 CE ON OL7    +
++++++++++++++++++++++++++++++++++++

#DISABLE FIREWALL AND SELINUX
sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config && setenforce 0
systemctl stop firewalld && systemctl disable firewalld

#SET HOSTNAME
hostnamectl set-hostname ol7pentaho
hostnamectl --static 

#ADD REPOSITORIES
vi /etc/yum.repos.d/oracle-linux-ol7.repo

[ol7_optional_developer]
name=Developer Preview of Oracle Linux $releasever Optional ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/optional/developer/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

[ol7_developer_EPEL]
name=Oracle Linux $releasever Development Packages ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/developer_EPEL/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

#INSTALL PACKAGES
yum repolist
yum install java-1.8.0-openjdk-devel -y 
yum install geoclue -y
yum install redhat-lsb-core -y 
yum install openssl-devel libtermcap-devel readline-devel gcc bison flex perl libconfig-devel kernel-devel rsync -y
yum install zlib jzlib zlib-devel -y
yum install tigervnc-server xterm -y
wget ftp://ftp.pbone.net/mirror/archive.fedoraproject.org/fedora/linux/releases/18/Everything/x86_64/os/Packages/w/webkitgtk-1.10.1-1.fc18.x86_64.rpm
wget ftp://ftp.pbone.net/mirror/archive.fedoraproject.org/fedora/linux/releases/18/Fedora/x86_64/os/Packages/l/libicu-49.1.1-5.fc18.x86_64.rpm
rpm -ivh libicu-49.1.1-5.fc18.x86_64.rpm
rpm -ivh webkitgtk-1.10.1-1.fc18.x86_64.rpm

#CHECK JAVA VERSION
java -version
openjdk version "1.8.0_222-ea"
OpenJDK Runtime Environment (build 1.8.0_222-ea-b03)
OpenJDK 64-Bit Server VM (build 25.222-b03, mixed mode)

#CREATE USER PENTAHO AND CONFIGURE
adduser pentaho
su - pentaho
vi .bash_profile
export _PENTAHO_JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre
export _PENTAHO_INSTALLED_LICENSE_PATH=/home/pentaho/.pentaho/.installedLicenses.xml
export _PENTAHO_JAVA=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre
source .bash_profile
env | grep PENTAHO_JAVA_HOME
PENTAHO_JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b03-1.el7.x86_64
env | grep PENTAHO_INSTALLED_LICENSE_PATH
PENTAHO_INSTALLED_LICENSE_PATH=/home/pentaho/.pentaho/.installedLicenses.xml

#DOWNLOAD PENTAHO SERVER DIRECTORY AND PENTAHO DATA INTEGRATION
wget https://ufpr.dl.sourceforge.net/project/pentaho/Pentaho%209.0/server/pentaho-server-ce-9.0.0.0-423.zip
wget https://ufpr.dl.sourceforge.net/project/pentaho/Pentaho%209.0/client-tools/pdi-ce-9.0.0.0-423.zip

#CREATE DIRECTORY AND MOVE TO FINAL DIRECTORY
mkdir -p /usr/local/pentaho/server/
mkdir -p /usr/local/pentaho/.pentaho

mv /home/pentaho/pentaho-server-ce-9.0.0.0-423.zip /usr/local/pentaho/server/
cd /usr/local/pentaho/server/
unzip pentaho-server-ce-9.0.0.0-423.zip

#CONFIGURE DATABASE SOURCE
vi /usr/local/pentaho/server/pentaho-server/pentaho-solutions/system/quartz/quartz.properties
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
org.quartz.dataSource.myDS.jndiURL = Quartz
vi /usr/local/pentaho/server/pentaho-server/pentaho-solutions/system/hibernate/postgresql.hibernate.cfg.xml
    <property name="connection.url">jdbc:postgresql://localhost:5432/hibernate</property>
    <property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>
    <property name="connection.username">hibuser</property>
    <property name="connection.password">password</property>
    <property name="connection.pool_size">10</property>
vi /usr/local/pentaho/server/pentaho-server/tomcat/webapps/pentaho/META-INF/context.xml
<?xml version="1.0" encoding="UTF-8"?>
<Context path="/pentaho" docbase="webapps/pentaho/">
        <Resource name="jdbc/Hibernate" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="hibuser" password="password" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/hibernate" validationQuery="select 1"/>
        <Resource name="jdbc/Audit" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="hibuser" password="password" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/hibernate" validationQuery="select 1"/>
        <Resource name="jdbc/Quartz" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="pentaho_user" password="password" testOnBorrow="true" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/quartz" validationQuery="select 1"/>
        <Resource name="jdbc/pentaho_operations_mart" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="hibuser" password="password" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/pentaho_operations_mart" validationQuery="select 1"/>
        <Resource name="jdbc/PDI_Operations_Mart" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="hibuser" password="password" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/hibernate" validationQuery="select 1"/>
        <Resource name="jdbc/live_logging_info" auth="Container" type="javax.sql.DataSource" factory="org.apache.tomcat.jdbc.pool.DataSourceFactory" initialSize="0" maxActive="20" maxIdle="10" maxWait="10000" username="hibuser" password="password" driverClassName="org.postgresql.Driver" url="jdbc:postgresql://localhost:5432/hibernate?searchpath=pentaho_dilogs" validationQuery="select 1"/>
</Context>

mv /home/pentaho/pdi-ce-9.0.0.0-423.zip /usr/local/pentaho/server/
cd /usr/local/pentaho/server/
unzip pdi-ce-9.0.0.0-423.zip

#INSTALL POSTGRES DATABASE
wget https://ftp.postgresql.org/pub/source/v11.4/postgresql-11.4.tar.gz
tar xvfz postgresql-11.4.tar.gz
cd postgresql-11.4
mkdir -p /usr/local/pgsql-11.4
./configure --prefix=/usr/local/pgsql-11.4 --with-openssl
make
make install
cd contrib/
make
make install
cd ~
mkdir -p /dados/data
adduser postgres
chown postgres:postgres -R /dados
su - postgres
/usr/local/pgsql-11.4/bin/initdb --locale=pt_BR.UTF-8 -D /dados/data/
exit

#CREATE SERVICE POSTGRES DATABASE
vi /usr/lib/systemd/system/postgresql.service
[Unit]
Description=PostgreSQL database server
Documentation=man:postgres(1)

[Service]
Type=notify
User=postgres
ExecStart=/usr/local/pgsql-11.4/bin/postgres -D /dados/data
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGINT
TimeoutSec=0

[Install]
WantedBy=multi-user.target

systemctl daemon-reload
systemctl enable postgresql.service
systemctl start postgresql.service

#RUN SCRIPTS FROM PENTAHO SERVER DIRECTORY ON POSTGRES DATABASE
su - pentaho
cd /usr/local/pentaho/server/pentaho-server/data/postgresql 
/usr/local/pgsql-11.4/bin/psql -U postgres -p 5432 -f create_jcr_postgresql.sql
/usr/local/pgsql-11.4/bin/psql -U postgres -p 5432 -f create_quartz_postgresql.sql
/usr/local/pgsql-11.4/bin/psql -U postgres -p 5432 -f create_repository_postgresql.sql

#CREATE SERVICE PENTAHO SERVER DIRECTORY
vi /etc/systemd/system/pentaho.service
[Unit]
Description=Pentho Bi-server
After=syslog.target
After=network.target
[Service]
Type=forking
User=pentaho
Group=pentaho
Environment=JAVA_HOME=$_PENTAHO_JAVA_HOME
ExecStart=/usr/local/pentaho/server/pentaho-server/start-pentaho.sh
ExecStartPost=/bin/echo pentaho...end of unitfile
ExecStop=/usr/local/pentaho/server/pentaho-server/stop-pentaho.sh
TimeoutSec=300

[Install]
WantedBy=graphical.target

systemctl daemon-reload
systemctl enable pentaho.service
systemctl status pentaho.service
● pentaho.service - Pentho Bi-server
   Loaded: loaded (/etc/systemd/system/pentaho.service; enabled; vendor preset: disabled)
   Active: active (running) since Thu 2020-07-23 22:38:47 -03; 6s ago
  Process: 3160 ExecStartPost=/bin/echo pentaho...end of unitfile (code=exited, status=0/SUCCESS)
  Process: 3138 ExecStart=/usr/local/pentaho/server/pentaho-server/start-pentaho.sh (code=exited, status=0/SUCCESS)
 Main PID: 3159 (java)
    Tasks: 18
   CGroup: /system.slice/pentaho.service
           └─3159 /bin/java -Djava.util.logging.config.file=/usr/local/pentaho/server/pentaho-server/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -D...

Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: --------------------------------------------------------------------------------------------
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: The Pentaho BI Platform now contains a version checker that will notify you
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: when newer versions of the software are available. The version checker is enabled by default.
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: For information on what the version checker does, why it is beneficial, and how it works see:
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: http://wiki.pentaho.com/display/ServerDoc2x/Version+Checker
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: Press Enter to continue, or type cancel or Ctrl-C to prevent the server from starting.
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: You will only be prompted once with this question.
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: --------------------------------------------------------------------------------------------
Jul 23 22:38:47 ol7pentaho start-pentaho.sh[3138]: [OK]:
Jul 23 22:38:47 ol7pentaho systemd[1]: Started Pentho Bi-server.

#ACCESS PENTAHO SERVER DIRECTORY
http://$<IP>:8080/pentaho/Home
user = admin
password (default) = password

#CONFIGURE VNC
vi /etc/sysconfig/vncservers
VNCSERVERS="2:root 3:pentaho"
VNCSERVERARGS[2]="-geometry 1280x1024 -nolisten tcp -localhost"
VNCSERVERARGS[3]="-geometry 1280x1024"
cp /lib/systemd/system/vncserver@.service /lib/systemd/system/vncserver@:3.service
vi /lib/systemd/system/vncserver@:3.service
[Unit]
Description=Remote desktop service (VNC)
After=syslog.target network.target

[Service]
Type=simple

# Clean any existing files in /tmp/.X11-unix environment
ExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill %i > /dev/null 2>&1 || :'
User=pentaho
ExecStart=/usr/bin/vncserver %i -geometry 1440x1080
PIDFile=/home/pentaho/.vnc/%H%i.pid
ExecStop=/bin/sh -c '/usr/bin/vncserver -kill %i > /dev/null 2>&1 || :'

[Install]
WantedBy=multi-user.target

su - pentaho
vncpasswd
Password:
Verify:
Would you like to enter a view-only password (y/n)? n
exit

systemctl daemon-reload
systemctl enable vncserver@:3.service
systemctl start vncserver@:3.service

#RUN SPOON
/usr/local/pentaho/server/data-integration/spoon.sh

#END












