++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+   WORKING WITH RDD OPERATIONS USING PYSPARK ON UBUNTU 20   +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

./pyspark

Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /__ / .__/\_,_/_/ /_/\_\   version 3.0.0
      /_/

Using Python version 3.8.2 (default, Jul 16 2020 14:00:26)
SparkSession available as 'spark'.
>>> import findspark
>>> import pyspark
>>> findspark.init()
>>> sc = pyspark.SparkContext.getOrCreate()
>>> logFile = sc.textFile("LabData/notebook.log")
>>> logFile.count()
34836                                                                           
>>> linesWithSpark = logFile.filter(lambda line: "INFO" in line)
>>> logFile.filter(lambda line: "INFO" in line).count()
13438
>>> logFile.filter(lambda line: "INFO" in line).collect()
['15/10/14 14:29:21 INFO SparkContext: Running Spark version 1.4.1', 
'15/10/14 14:29:22 INFO SecurityManager: Changing view acls to: notebook', 
'15/10/14 14:29:22 INFO SecurityManager: Changing modify acls to: notebook', 
'15/10/14 14:29:22 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled;
 users with view permissions: Set(notebook); users with modify permissions: Set(notebook)', 
 '15/10/14 14:29:23 INFO Slf4jLogger: Slf4jLogger started', 
 '15/10/14 14:29:23 INFO Remoting: Starting remoting', 
 '15/10/14 14:29:23 INFO Remoting: Remoting started; 
 listening on addresses :[akka.tcp://sparkDriver@172.17.0.22:53333]'
 
 #JOINING RDDS
 
 Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /__ / .__/\_,_/_/ /_/\_\   version 3.0.0
      /_/

Using Python version 3.8.2 (default, Jul 16 2020 14:00:26)
SparkSession available as 'spark'.
>>> import findspark
>>> import pyspark
>>> findspark.init()
>>> sc = pyspark.SparkContext.getOrCreate()
>>> readmeFile = sc.textFile("LabData/README.md")
>>> pomFile = sc.textFile("LabData/pom.xml")
>>> print(readmeFile.filter(lambda line: "Spark" in line).count())
18
>>> print(pomFile.filter(lambda line: "Spark" in line).count())
2
>>> readmeCount = readmeFile.flatMap(lambda line: line.split("   ")).map(lambda word: (word, 1)).reduceByKey(lambda a, b: a + b)
>>> pomCount = pomFile.flatMap(lambda line: line.split("   ")).map(lambda word: (word, 1)).reduceByKey(lambda a, b: a + b)
>>> print("Readme Count\n")
Readme Count

>>> print(readmeCount.collect())
[('', 43), ('Spark is a fast and general cluster computing system for Big Data. It provides', 1), ('and Spark Streaming for stream processing.', 1), 
('guide, on the [project web page](http://spark.apache.org/documentation.html)', 1), ('## Building Spark', 1), 
('Spark is built using [Apache Maven](http://maven.apache.org/).', 1), (' build/mvn -DskipTests clean package', 1), 
('Try the following command, which should return 1000:', 1), (' scala> sc.parallelize(1 to 1000).count()', 1), ('## Interactive Python Shell', 1), 
(' ./bin/pyspark', 1), ('And run the following command, which should also return 1000:', 1), 
('Spark also comes with several sample programs in the `examples` directory.', 1), 
('To run one of them, use `./bin/run-example <class> [params]`. For example:', 1), (' ./bin/run-example SparkPi', 1), 
('will run the Pi example locally.', 1), ('You can set the MASTER environment variable when running examples to submit', 1), 
('examples to a cluster. This can be a mesos:// or spark:// URL,', 1), ('can also use an abbreviated class name if the class is in the `examples`', 1), 
('package. For instance:', 1), (' MASTER=spark://host:7077 ./bin/run-example SparkPi', 1), 
('Many of the example programs print usage help if no params are given.', 1), 
('Testing first requires [building Spark](#building-spark). Once Spark is built, tests', 1), ('can be run using:', 1), 
('[run tests for a module, or individual tests](https://cwiki.apache.org/confluence/display/SPARK/Useful+Developer+Tools).', 1), 
('## A Note About Hadoop Versions', 1), ('storage systems. Because the protocols have changed in different versions of', 1), 
('Hadoop, you must build Spark against the same version that your cluster runs.', 1), 
('["Specifying the Hadoop Version"](http://spark.apache.org/docs/latest/building-spark.html#specifying-the-hadoop-version)', 1), 
('for detailed guidance on building for a particular distribution of Hadoop, including', 1), ('distribution.', 1), ('## Configuration', 1), 
('Please refer to the [Configuration Guide](http://spark.apache.org/docs/latest/configuration.html)', 1), 
('in the online documentation for an overview on how to configure Spark.', 1), ('# Apache Spark', 1), 
('high-level APIs in Scala, Java, Python, and R, and an optimized engine that', 1), 
('supports general computation graphs for data analysis. It also supports a', 1), 
('rich set of higher-level tools including Spark SQL for SQL and DataFrames,', 1), ('MLlib for machine learning, GraphX for graph processing,', 1), 
('<http://spark.apache.org/>', 1), ('## Online Documentation', 1), ('You can find the latest Spark documentation, including a programming', 1), 
('and [project wiki](https://cwiki.apache.org/confluence/display/SPARK).', 1), ('This README file only contains basic setup instructions.', 1), 
('To build Spark and its example programs, run:', 1), ('(You do not need to do this if you downloaded a pre-built package.)', 1), 
('More detailed documentation is available from the project site, at', 1), ('["Building Spark"](http://spark.apache.org/docs/latest/building-spark.html).', 1), 
('## Interactive Scala Shell', 1), ('The easiest way to start using Spark is through the Scala shell:', 1), (' ./bin/spark-shell', 1), 
('Alternatively, if you prefer Python, you can use the Python shell:', 1), (' >>> sc.parallelize(range(1000)).count()', 1), ('## Example Programs', 1), 
('"yarn" to run on YARN, and "local" to run', 1), ('locally with one thread, or "local[N]" to run locally with N threads. You', 1), 
('## Running Tests', 1), (' ./dev/run-tests', 1), ('Please see the guidance on how to', 1), 
('Spark uses the Hadoop core library to talk to HDFS and other Hadoop-supported', 1), ('Please refer to the build documentation at', 1), 
('building for particular Hive and Hive Thriftserver distributions. See also', 1), 
('["Third Party Hadoop Distributions"](http://spark.apache.org/docs/latest/hadoop-third-party-distributions.html)', 1), 
('for guidance on building a Spark application that works with a particular', 1)]
>>> print("Pom Count\n")
Pom Count

>>> print(pomCount.collect())
[('<?xml version="1.0" encoding="UTF-8"?>', 1), ('  ~ Licensed to the Apache Software Foundation (ASF) under one or more', 1), 
('  ~ contributor license agreements.  See the NOTICE file distributed with', 1), 
('  ~ The ASF licenses this file to You under the Apache License, Version 2.0', 1), (' http://www.apache.org/licenses/LICENSE-2.0', 1), 
('  ~ distributed under the License is distributed on an "AS IS" BASIS,', 1), ('  ~ limitations under the License.', 1), ('  -->', 1), ('', 841), 
('<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">', 1), 
('  <modelVersion>4.0.0</modelVersion>', 1), ('  <parent>', 1), (' <groupId>org.apache.spark</groupId>', 2), 
(' <artifactId>spark-parent_2.10</artifactId>', 1), (' <version>1.6.0-SNAPSHOT</version>', 1), ('  <properties>', 1), 
(' <sbt.project.name>examples</sbt.project.name>', 1), ('  </properties>', 1), ('  <packaging>jar</packaging>', 1), ('  <dependencies>', 1), 
(' <dependency>', 24), ('<version>${project.version}</version>', 11), (' </dependency>', 24), 
('<artifactId>spark-streaming_${scala.binary.version}</artifactId>', 1), ('<artifactId>spark-bagel_${scala.binary.version}</artifactId>', 1), 
('<artifactId>spark-hive_${scala.binary.version}</artifactId>', 1), ('<artifactId>spark-graphx_${scala.binary.version}</artifactId>', 1), 
('<artifactId>spark-streaming-flume_${scala.binary.version}</artifactId>', 1), ('<exclusions>', 6), (' <artifactId>protobuf-java</artifactId>', 1), 
(' <!-- SPARK-4455 -->', 4), (' <groupId>org.apache.hbase</groupId>', 5), (' <artifactId>hbase-annotations</artifactId>', 4), 
(' <artifactId>jruby-complete</artifactId>', 1), ('<artifactId>hbase-protocol</artifactId>', 1), ('<artifactId>hbase-common</artifactId>', 1), 
(' <exclusion>', 1), ('  <artifactId>netty</artifactId>', 1), (' <artifactId>hadoop-core</artifactId>', 1), 
(' <artifactId>hadoop-mapreduce-client-core</artifactId>', 1), (' <artifactId>hadoop-annotations</artifactId>', 1), 
(' <artifactId>commons-math</artifactId>', 1), (' <groupId>com.sun.jersey</groupId>', 4), (' <artifactId>jersey-core</artifactId>', 2), 
(' <groupId>org.slf4j</groupId>', 1), (' <artifactId>slf4j-api</artifactId>', 1), (' <artifactId>commons-io</artifactId>', 1), 
('<scope>test</scope>', 2), ('<artifactId>commons-math3</artifactId>', 1), ('<groupId>com.twitter</groupId>', 1), 
('<groupId>org.scalacheck</groupId>', 1), ('<artifactId>cassandra-all</artifactId>', 1), ('<version>1.2.6</version>', 1), 
(' <groupId>com.googlecode.concurrentlinkedhashmap</groupId>', 1), (' <artifactId>commons-cli</artifactId>', 1), 
(' <groupId>commons-codec</groupId>', 1), (' <groupId>commons-lang</groupId>', 1), (' <artifactId>commons-lang</artifactId>', 1), 
(' <groupId>commons-logging</groupId>', 1), (' <artifactId>commons-logging</artifactId>', 1), (' <artifactId>netty</artifactId>', 1), 
(' <groupId>jline</groupId>', 1), (' <groupId>org.apache.cassandra.deps</groupId>', 1), (' <artifactId>avro</artifactId>', 1), 
('<groupId>com.github.scopt</groupId>', 1), ('<artifactId>scopt_${scala.binary.version}</artifactId>', 1), ('<version>3.2.0</version>', 1), 
('them to be provided.', 1), ('  </dependencies>', 1), ('  <build>', 1), 
(' <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>', 1), 
(' <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>', 1), ('<plugin>', 3), 
('  <groupId>org.apache.maven.plugins</groupId>', 3), ('  <artifactId>maven-deploy-plugin</artifactId>', 1), (' <skip>true</skip>', 2), 
('  </configuration>', 3), ('</plugin>', 3), ('  <artifactId>maven-shade-plugin</artifactId>', 1), 
(' <shadedArtifactAttached>false</shadedArtifactAttached>', 1), 
(' <outputFile>${project.build.directory}/scala-${scala.binary.version}/spark-examples-${project.version}-hadoop${hadoop.version}.jar</outputFile>', 1), 
(' <artifactSet>', 1), ('<includes>', 1), (' </artifactSet>', 1), ('<filter>', 1), ('  <artifact>*:*</artifact>', 1), 
(' <exclude>META-INF/*.DSA</exclude>', 1), (' <exclude>META-INF/*.RSA</exclude>', 1), ('  </excludes>', 1), ('</filter>', 1), 
(' </filters>', 1), ('<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />', 1), 
('</transformer>', 2), ('<transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">', 1), 
('  <resource>log4j.properties</resource>', 1), ('  </build>', 1), ('<dependencies>', 1), 
(' <artifactId>spark-streaming-kinesis-asl_${scala.binary.version}</artifactId>', 1), ('</dependencies>', 1), (' </profile>', 6), 
('  <flume.deps.scope>provided</flume.deps.scope>', 1), ('  <hadoop.deps.scope>provided</hadoop.deps.scope>', 1), ('<id>hbase-provided</id>', 1), 
('  <hbase.deps.scope>provided</hbase.deps.scope>', 1), ('<id>parquet-provided</id>', 1), ('  <parquet.deps.scope>provided</parquet.deps.scope>', 1), 
('  </profiles>', 1), ('<!--', 1), ('  ~ this work for additional information regarding copyright ownership.', 1), 
('  ~ (the "License"); you may not use this file except in compliance with', 1), ('  ~ the License.  You may obtain a copy of the License at', 1), 
('  ~', 3), ('  ~ Unless required by applicable law or agreed to in writing, software', 1), 
('  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.', 1), 
('  ~ See the License for the specific language governing permissions and', 1), (' <relativePath>../pom.xml</relativePath>', 1), 
('  </parent>', 1), ('  <groupId>org.apache.spark</groupId>', 1), ('  <artifactId>spark-examples_2.10</artifactId>', 1), 
('  <name>Spark Project Examples</name>', 1), ('  <url>http://spark.apache.org/</url>', 1), ('<groupId>org.apache.spark</groupId>', 11), 
('<artifactId>spark-core_${scala.binary.version}</artifactId>', 1), ('<scope>provided</scope>', 8), 
('<artifactId>spark-mllib_${scala.binary.version}</artifactId>', 1), ('<artifactId>spark-streaming-twitter_${scala.binary.version}</artifactId>', 1), 
('<artifactId>spark-streaming-mqtt_${scala.binary.version}</artifactId>', 1), ('<artifactId>spark-streaming-zeromq_${scala.binary.version}</artifactId>', 1), 
('  <exclusion>', 34), (' <groupId>org.spark-project.protobuf</groupId>', 1), ('  </exclusion>', 34), ('</exclusions>', 5), 
('<artifactId>spark-streaming-kafka_${scala.binary.version}</artifactId>', 1), ('<groupId>org.apache.hbase</groupId>', 7), 
('<artifactId>hbase-testing-util</artifactId>', 1), ('<version>${hbase.version}</version>', 7), ('<scope>${hbase.deps.scope}</scope>', 6), 
(' <groupId>org.jruby</groupId>', 1), ('<artifactId>hbase-client</artifactId>', 1), ('  <groupId>io.netty</groupId>', 1), (' </exclusion>', 1), 
('  </exclusions>', 1), ('<artifactId>hbase-server</artifactId>', 1), (' <groupId>org.apache.hadoop</groupId>', 7), 
(' <artifactId>hadoop-client</artifactId>', 1), (' <artifactId>hadoop-mapreduce-client-jobclient</artifactId>', 1), 
(' <artifactId>hadoop-auth</artifactId>', 1), (' <artifactId>hadoop-hdfs</artifactId>', 1), (' <artifactId>hbase-hadoop1-compat</artifactId>', 1), 
(' <groupId>org.apache.commons</groupId>', 2), (' <artifactId>jersey-server</artifactId>', 1), (' <artifactId>jersey-json</artifactId>', 1), 
(' <!-- hbase uses v2.4, which is better, but ...-->', 1), (' <groupId>commons-io</groupId>', 1), ('<artifactId>hbase-hadoop-compat</artifactId>', 2), 
('<type>test-jar</type>', 1), ('<groupId>org.apache.commons</groupId>', 1), ('<artifactId>algebird-core_${scala.binary.version}</artifactId>', 1), 
('<version>0.9.0</version>', 1), ('<artifactId>scalacheck_${scala.binary.version}</artifactId>', 1), ('<groupId>org.apache.cassandra</groupId>', 1), 
(' <groupId>com.google.guava</groupId>', 1), (' <artifactId>guava</artifactId>', 1), (' <artifactId>concurrentlinkedhashmap-lru</artifactId>', 1), 
(' <groupId>com.ning</groupId>', 1), (' <artifactId>compress-lzf</artifactId>', 1), (' <groupId>commons-cli</groupId>', 1), 
(' <artifactId>commons-codec</artifactId>', 1), (' <groupId>io.netty</groupId>', 1), (' <artifactId>jline</artifactId>', 1), 
(' <groupId>net.jpountz.lz4</groupId>', 1), (' <artifactId>lz4</artifactId>', 1), (' <artifactId>commons-math3</artifactId>', 1), 
(' <groupId>org.apache.thrift</groupId>', 1), (' <artifactId>libthrift</artifactId>', 1), (' <!--', 1), 
('The following dependencies are already present in the Spark assembly, so we want to force', 1), (' -->', 1), 
('<groupId>org.scala-lang</groupId>', 1), ('<artifactId>scala-library</artifactId>', 1), (' <plugins>', 1), ('  <configuration>', 3), 
('  <artifactId>maven-install-plugin</artifactId>', 1), ('  <include>*:*</include>', 1), ('</includes>', 1), (' <filters>', 1), 
('  <excludes>', 1), (' <exclude>META-INF/*.SF</exclude>', 1), (' <transformers>', 1), 
('<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">', 1), ('  <resource>reference.conf</resource>', 1), 
(' </transformers>', 1), (' </plugins>', 1), ('  <profiles>', 1), (' <profile>', 6), ('<id>kinesis-asl</id>', 1), ('  <dependency>', 1), 
(' <version>${project.version}</version>', 1), ('  </dependency>', 1), (' <!-- Profiles that disable inclusion of certain dependencies. -->', 1), 
('<id>flume-provided</id>', 1), ('<properties>', 5), ('</properties>', 5), ('<id>hadoop-provided</id>', 1), ('<id>hive-provided</id>', 1), 
('  <hive.deps.scope>provided</hive.deps.scope>', 1), ('</project>', 1)]
>>> 


 
 
 
 
