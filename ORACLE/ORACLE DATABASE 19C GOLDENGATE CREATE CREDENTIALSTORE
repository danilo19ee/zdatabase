++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+   ORACLE DATABASE 19C GOLDENGATE CREATE CREDENTIALSTORE    +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ADD CREDENTIALSTORE command it’s used to create a credential store for oracle goldengate. 
The credential store manages user IDs and their encrypted passwords that are used by Oracle GoldenGate processes to communicate with the local database. 
The credential store avoid’s to specify the user names and clear-text passwords in the Oracle GoldenGate parameter files.
The ADD CREDENTIALSTORE is a new command in Oracle GoldenGate 19c and the default location of the credential store is "$GGHOME/dircrd" directory of the GoldenGate software home.

* CHECK THAT THE DATABASE IS IN ARCHIVELOG MODE.
* CREATE THE USER FOR GOLDENGATE ‘C ## OGGUSER’
* GRANT THE PRIVILEGES TO THE ‘C ## OGGUSER’ USER
* ADD SUPPLEMENTAL LOGS TO THE DATABASE   

sqlplus / as sysdba

SQL*Plus: Release 19.0.0.0.0 - Production on Tue Sep 15 20:22:07 2020
Version 19.5.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.5.0.0.0

SQL> ALTER SYSTEM SET STREAMS_POOL_SIZE=1250M SCOPE=spfile;

SQL> SHUTDOWN IMMEDIATE;

SQL> STARTUP;

SQL> ALTER DATABASE FORCE LOGGING;

Database altered.

SQL> ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;

Database altered.

SQL> select SUPPLEMENTAL_LOG_DATA_MIN,FORCE_LOGGING from v$database;

SUPPLEME FORCE_LOGGING
-------- ---------------------------------------
YES      YES

SQL> ALTER SYSTEM SET ENABLE_GOLDENGATE_REPLICATION=TRUE SCOPE=BOTH;

System altered.

SQL> show parameter ENABLE_GOLDENGATE_REPLICATION;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
enable_goldengate_replication        boolean     TRUE

SQL> CREATE USER C##GGUSER IDENTIFIED BY oracle123;

User created

SQL> GRANT CREATE SESSION, CONNECT, RESOURCE TO C##GGUSER CONTAINER=ALL;

Grant succeeded.

SQL> GRANT SELECT ANY TABLE, ALTER SYSTEM TO C##GGUSER CONTAINER=ALL;

Grant succeeded.

SQL> GRANT DBA TO C##GGUSER CONTAINER=ALL;

Grant succeeded.

SQL> GRANT SET CONTAINER TO C##GGUSER;

Grant succeeded.

SQL> EXEC DBMS_GOLDENGATE_AUTH.GRANT_ADMIN_PRIVILEGE('C##GGUSER', container=>'ALL');

PL/SQL procedure successfully completed.

SQL> EXEC DBMS_GOLDENGATE_AUTH.GRANT_ADMIN_PRIVILEGE('C##GGUSER','capture', container=>'ALL');

PL/SQL procedure successfully completed.

SQL> EXEC DBMS_GOLDENGATE_AUTH.GRANT_ADMIN_PRIVILEGE('C##GGUSER','apply', container=>'ALL');

PL/SQL procedure successfully completed.

SQL> exec dbms_goldengate_auth.grant_admin_privilege('C##GGUSER');

PL/SQL procedure successfully completed.

SQL> @marker_setup.sql

Marker setup script

You will be prompted for the name of a schema for the Oracle GoldenGate database objects.
NOTE: The schema must be created prior to running this script.
NOTE: Stop all DDL replication before starting this installation.

Enter Oracle GoldenGate schema name:C##GGUSER


Marker setup table script complete, running verification script...
Please enter the name of a schema for the GoldenGate database objects:
Setting schema name to C##GGUSER

MARKER TABLE
-------------------------------
OK

MARKER SEQUENCE
-------------------------------
OK

Script complete.
SQL> @role_setup.sql 

GGS Role setup script

This script will drop and recreate the role GGS_GGSUSER_ROLE
To use a different role name, quit this script and then edit the params.sql script to change the gg_role parameter to the preferred name. (Do not run the script.)

You will be prompted for the name of a schema for the GoldenGate database objects.
NOTE: The schema must be created prior to running this script.
NOTE: Stop all DDL replication before starting this installation.

Enter GoldenGate schema name:C##GGUSER
Wrote file role_setup_set.txt

PL/SQL procedure successfully completed.


Role setup script complete

Grant this role to each user assigned to the Extract, GGSCI, and Manager processes, by using the following SQL command:

GRANT GGS_GGSUSER_ROLE TO <loggedUser>

where <loggedUser> is the user assigned to the GoldenGate processes.

SQL> exit

#CONFIGURE TNSNAMES.ORA FILE 
cat /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora
appspdb =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.130)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = appspdb)
    )
  )

#CONNECT GGSCI
./ggsci
dblogin userid C##GGUSER@appspdb, password oracle123

