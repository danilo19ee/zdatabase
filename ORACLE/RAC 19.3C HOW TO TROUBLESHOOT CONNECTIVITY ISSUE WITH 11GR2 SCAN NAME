+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+   RAC 19.3C HOW TO TROUBLESHOOT CONNECTIVITY ISSUE WITH 11GR2 SCAN NAME   +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

This document is to provide checklist when connection through 11gR2 Grid Infrastructure (CRS) SCAN name to database fails.
When client program connects to RAC database through SCAN name, SCAN listener will accept t he request and redirect the connection to local listener. 
o identify connection issue, first try to connect to each local listener through node VIP, then try each SCAN listener through each SCAN VIP. 
SCAN provides a single domain name via DNS), allowing and-users to address a RAC cluster as-if it were a single IP address. 
SCAN works by replacing a hostname or IP list with virtual IP addresses (VIP).  
Because SCAN determines the actual node and listener which accepts the connection, SCAN provides location independence for the databases.
A SCAN database connection does not require any details about a particular node on instance.  SCAN is part of the 11g release 2 movement toward "RAC Virtualization".
Virtualization is great for some RAC shops, not so good for others.
SCAN is an automatic load balancing tool that uses a relatively primitive least-recently-loaded algorithm. 
Most Fortune 50 mission critical RAC systems will not use an automated load balancer in favor of intelligent RAC load balancing, where you direct like-minded transactions to like-minded nodes. 
This approach greatly reduces the load on the cache fusion payer because less blocks must be sent across the RAC interconnect.

# THERE ARE TWO BENEFITS FOR SCAN:
º Fast RAC failover == If a node fails, Oracle detects the loss of connection to the VIP and redirects new connects to the surviving VIP's.  This is an alternative to the transparent application failover. (TAF) for automatic load balancing.  
º Easier maintenance for Grid RAC systems == For Grid systems that gen-in and gen-out blade servers frequently, SCAN offers easier change control for the RAC DBA.  As RAC nodes are added or deleted, the DBA does not have to change the configuration files to reflect the current list of RAC node IP addresses (or hostnames).  In a nutshell, SCAN allows a single cluster alias for all instances in the cluster.

# Configuring RAC to use SCAN

# ADD A NEW DNS ENTRY FOR SCAN IN /etc/hosts
This will create a single DNS domain name that resolves to all of the IP addresses in your RAC cluster (one for each node).
This will use a round-robin algorithm

vi /etc/hosts

# Scan IP´s
10.5.150.124 oraclerac19cn1-scan.appsdba.info oraclerac19cn1-scan
10.5.150.125 oraclerac19cn2-scan.appsdba.info oraclerac19cn2-scan
10.5.150.126 oraclerac19cn3-scan.appsdba.info oraclerac19cn3-scan

# CREATE A SCAN VIP FOR EACH IN /etc/hosts

# Public Virtual IP (VIP) addresses for - (eth0)
10.5.150.121 oraclerac19cn1-vip.appsdba.info oraclerac19cn1-vip
10.5.150.122 oraclerac19cn1-vip.appsdba.info oraclerac19cn2-vip
10.5.150.123 oraclerac19cn2-vip.appsdba.info oraclerac19cn3-vip


# CREATE A SCAN LISTENER FOR EACH VIP THAT WAS CREATED IN /etc/hosts

* srvctl stop scan_listener

* srvctl stop scan

* srvctl status scan_listener
SCAN listener LISTENER_SCAN1 is not running

* srvctl status scan
SCAN VIP scan1 is not running

* srvctl modify scan -n oraclerac19c-scan

* srvctl modify scan_listener -u

* srvctl config scan

* srvctl start scan

* srvctl status scan
 SCAN VIP scan1 is enabled
SCAN VIP scan1 is running on node oraclerac19cn1
SCAN VIP scan2 is enabled
SCAN VIP scan2 is running on node oraclerac19cn2
SCAN VIP scan3 is enabled
SCAN VIP scan3 is running on node oraclerac19cn3

CHANGE THE TNSNAMES.ORA FILE. THIS ENTRY WILL POINT SCAN TO THE SINGLE DNS HOSTNAME CREATED IN STEP 1. 
PRIOR TO THE INTRODUCTION OF SCAN (11G R1 AND EARLIER USING TAF OR INTELLIGENT LOAD BALANCING), THE TNSNAMES.ORA FILE CONTAINED A LIST OF HOSTNAMES, ONE FOR EACH NODE IN THE CLUSTER:

ORACLERAC19C-SCAN =
(DESCRIPTION =
  (ADDRESS = (PROTOCOL = TCP)(HOST = oraclerac19cn1-scan)(PORT = 1521))   
  (ADDRESS = (PROTOCOL = TCP)(HOST = oraclerac19cn2-scan)(PORT = 1521))
  (ADDRESS = (PROTOCOL = TCP)(HOST = oraclerac19cn3-scan)(PORT = 1521))
   (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = oradbc)
   )
)






